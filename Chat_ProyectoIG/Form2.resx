<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HTxHNO3pzQtfrD7f/9k=
</value>
  </data>
</root>